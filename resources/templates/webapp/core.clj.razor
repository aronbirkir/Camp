@inherits Westwind.RazorHosting.RazorTemplateBase
(assembly-load "Owin")
(assembly-load "Microsoft.Owin")
(assembly-load "Microsoft.Owin.Diagnostics")
(assembly-load "Microsoft.Owin.Hosting")

(ns @string.Format("{0}.core", Model["name"])
  (:import [System.Threading.Tasks Task]
           [Owin IAppBuilder]
           [Microsoft.Owin IOwinContext]
           [Microsoft.Owin.Extensions UseHandlerMiddleware]
           [Microsoft.Owin.Hosting StartOptions WebApp])
  (:gen-class))

(defn ^Task handler [^IOwinContext context]
  (let [resp (.Response context)]
    (.StartNew Task/Factory
               (fn []
                 (.Write resp "<html><body>TODO: finish</body></html>")))))

(defn configure [^IAppBuilder app-builder]
  (.Use app-builder UseHandlerMiddleware #^objects
        (into-array Object
	[(sys-func [IOwinContext Task] [ctxt] (handler ctxt))])))

(defn start
  ([] (start 9000))
  ([port]
   (let [start-options (StartOptions. (str "http://localhost:" port "/"))]
     ;; HACK: Microsoft.Owin.Hosting.WebApp.StartImplementation always tries to
     ;; get startup.Method.ReflectedType.FullName, even if you give
     ;; it a startup function, because it uses that to determine the
     ;; app name, even if you give it one.
     (set! (.AppStartup start-options) "@Model["name"]")
     (WebApp/Start start-options configure))))

(defn stop [app]
  (.Dispose app))

(defn -main [& args]
  (try
    (let [app (start)]
      (println "Server running. Press [Enter] to stop.")
      (read-line)
      (send app stop)
      0)
    (catch Exception ex
      (println "Error:" (.Message ex))
      (binding [*out* *err*]
        (println (.ToString ex)))
      -1)))
