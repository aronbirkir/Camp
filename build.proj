<?xml version="1.0" encoding="utf-8" ?>
<Project ToolsVersion="4.0"
         DefaultTargets="Build"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask TaskName="SetEnvironmentVariable"
             TaskFactory="CodeTaskFactory"
             AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v$(MSBuildToolsVersion).dll">

    <ParameterGroup>
      <Name ParameterType="System.String" Required="true" />
      <Value ParameterType="System.String" Required="true" />
    </ParameterGroup>

    <Task>
      <Using Namespace="System" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
                 Environment.SetEnvironmentVariable(Name, Value);
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <PropertyGroup>
    <Version>0.1.0.0</Version>
    <ProductVersion>0.1.0-SNAPSHOT</ProductVersion>
    <OutDir>$(MSBuildThisFileDirectory)bin\</OutDir>
    <Configuration>Debug</Configuration>
    <SourceDir>$(MSBuildThisFileDirectory)src</SourceDir>
    <ToolsDir>$(MSBuildThisFileDirectory)tools\</ToolsDir>
    <ClojureCompiler>$(MSBuildThisFileDirectory)tools\Clojure.Compile.exe</ClojureCompiler>
    <PackagesDir>$(MSBuildThisFileDirectory)packages</PackagesDir>
    <ClojurePackageDir>$(PackagesDir)\Clojure.1.6.0.1\</ClojurePackageDir>
    <ExtensionTasksPath>$(PackagesDir)\MSBuild.Extension.Pack.1.5.0\tools\net40</ExtensionTasksPath>
    <TargetsDir>$(MSBuildThisFileDirectory)targets</TargetsDir>
    <TestProjectName>tstproj</TestProjectName>
    <ChocoExe>$(MSBuildThisFileDirectory)\packages\chocolatey.0.9.9-rc8\tools\chocolateyInstall\choco.exe</ChocoExe>
  </PropertyGroup>

  <ItemGroup>
    <Tools Include="$(ClojurePackageDir)tools\net40\*" />
  </ItemGroup>

  <ItemGroup>
    <Libs Include="$(ClojurePackageDir)lib\net40\*.dll" />
    <Libs Include="$(PackagesDir)\Nuget.Core.2.8.3\lib\net40-Client\NuGet.Core.dll" />
    <Libs Include="$(PackagesDir)\Westwind.RazorHosting.3.00\lib\net40\Westwind.RazorHosting.dll" />
    <Libs Include="$(PackagesDir)\Microsoft.AspNet.Razor.3.2.3\lib\net45\*.dll" />
  </ItemGroup>

  <ItemGroup>
    <!-- Clojure.Compile wants the source namespace names, not files -->
    <Sources Include="camp.core" />
    <Sources Include="camp.main" />
    <Sources Include="camp.tasks.compile" />
    <Sources Include="camp.project" />
    <Sources Include="camp.nuget" />
    <Sources Include="camp.tasks.deploy" />
    <Sources Include="camp.tasks.deps" />
    <Sources Include="camp.tasks.help" />
    <Sources Include="camp.tasks.new" />
    <Sources Include="camp.tasks.package" />
    <Sources Include="camp.tasks.pprint" />
  </ItemGroup>

  <ItemGroup>
    <Resources Include="resources\templates\gitignore.razor">
      <LogicalName>templates.gitignore</LogicalName>
    </Resources>
    <Resources Include="resources\templates\project.razor">
      <LogicalName>templates.project</LogicalName>
    </Resources>
  </ItemGroup>

  <Target Name="Build" DependsOnTargets="RestorePackages;Init;CampExe" />

  <Target Name="RestorePackages">
    <Exec Command="&quot;$(ToolsDir)NuGet.exe&quot; restore -PackagesDirectory &quot;$(PackagesDir)&quot;" />
  </Target>

  <Target Name="Init" DependsOnTargets="InitToolsDir;InitTargetsDir" />

  <Target Name="CampExe" DependsOnTargets="Compile">
    <!-- <Copy SourceFiles="@(ClojureCompilerOutput)" DestinationFolder="$(TargetsDir)" /> -->
  </Target>

  <Target Name="InitToolsDir">

    <!-- copy clojure compiler tools into tools directory - you can't run them directly from packages... -->
    <Copy SourceFiles="@(Tools)"
          DestinationFolder="$(ToolsDir)"
          SkipUnchangedFiles="true" />

    <!-- also copy libs to tools directory for compilation time -->
    <Copy SourceFiles="@(Libs)"
          DestinationFolder="$(ToolsDir)"
          SkipUnchangedFiles="true" />
  </Target>

  <Target Name="InitTargetsDir">
    <!-- copy libs to targets directory for final executable -->
    <Copy SourceFiles="@(Libs)"
          DestinationFolder="$(TargetsDir)"
          SkipUnchangedFiles="true" />
  </Target>

  <Target Name="Compile" DependsOnTargets="CompileResources;CompileClojure" />
  
  <Target Name="CompileResources">
    <AL EmbedResources="@(Resources)"
	Description="Resources used by camp"
	Title="camp resources"
	ProductName="camp"
	ProductVersion="$(Version)"
	Version="$(Version)"
	OutputAssembly="$(TargetsDir)\camp.resources.dll" />
    <Copy SourceFiles="$(TargetsDir)\camp.resources.dll"
	  DestinationFolder="$(ToolsDir)" />
  </Target>

  <Target Name="CompileClojure">
    <!-- have compiler output go straight into targets path -->
    <SetEnvironmentVariable Name="CLOJURE_COMPILE_PATH" Value="$(TargetsDir)" />
    <Exec Command="$(ClojureCompiler) @(Sources, ' ')"
          WorkingDirectory="$(SourceDir)" />
    <Move SourceFiles="$(TargetsDir)\camp.main.exe"
          DestinationFiles="$(TargetsDir)\camp.exe" />
  </Target>

  <Target Name="TestNew" DependsOnTargets="CampExe">
    <Delete Files="$(TestProjectName)" />
    <Exec Command="targets\camp.exe new $(TestProjectName)"
          WorkingDirectory="$(MSBuildThisFileDirectory)" />
  </Target>

  <Target Name="TestDeps" DependsOnTargets="CampExe">
    <Exec Command="..\targets\camp.exe deps"
          WorkingDirectory="$(MSBuildThisFileDirectory)\$(TestProjectName)" />
  </Target>

  <Target Name="TestCompile" DependsOnTargets="CampExe">
    <Exec Command="..\targets\camp.exe compile"
          WorkingDirectory="$(MSBuildThisFileDirectory)\$(TestProjectName)" />
  </Target>

  <Target Name="TestRunTarget" DependsOnTargets="CampExe">
    <Message Text="Target output:" Importance="high" />
    <Message Text="----------------------------------------" Importance="high" />
    <Exec Command="$(TestProjectName).core.exe"
          WorkingDirectory="$(TestProjectName)\targets" />
    <Message Text="----------------------------------------" Importance="high" />
  </Target>

  <Target Name="Package" DependsOnTargets="ChocolateyPackage" />

  <Target Name="ChocolateyPackage" DependsOnTargets="CampExe">
    <Exec Command="$(ChocoExe) pack chocolatey\camp.nuspec" />
  </Target>

  <Target Name="ChocoInstall" DependsOnTargets="ChocolateyPackage">
    <Exec Command="$(ChocoExe) install --debug --force --pre --source chocolatey camp.portable" />
  </Target>

  <Target Name="Clean">
    <!-- TODO: Rest of binaries -->
    <Delete Files="chocolatey\camp*.nupkg" />
  </Target>

</Project>
