<?xml version="1.0" encoding="utf-8" ?>
<Project ToolsVersion="4.0"
         DefaultTargets="Build"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask TaskName="SetEnvironmentVariable"
	     TaskFactory="CodeTaskFactory"
	     AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v$(MSBuildToolsVersion).dll">

    <ParameterGroup>
      <Name ParameterType="System.String" Required="true" />
      <Value ParameterType="System.String" Required="true" />
    </ParameterGroup>

    <Task>
      <Using Namespace="System" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
                 Environment.SetEnvironmentVariable(Name, Value);
        ]]>
      </Code>
    </Task>
  </UsingTask>
  
  <PropertyGroup>
    <OutDir Condition=" '$(OutDir)'=='' ">$(MSBuildThisFileDirectory)bin\</OutDir>
    <Configuration Condition=" '$(Configuration)'=='' ">Debug</Configuration>
    <SourceDir Condition=" '$(SourceDir)'=='' ">$(MSBuildThisFileDirectory)src</SourceDir>
    <ToolsDir Condition=" '$(ToolsDir)'=='' ">$(MSBuildThisFileDirectory)tools\</ToolsDir>
    <ClojureCompiler Condition=" '$(ClojureCompiler)'==''">$(MSBuildThisFileDirectory)tools\Clojure.Compile.exe</ClojureCompiler>
    <PackagesDir Condition=" '$(PackagesDir)'=='' ">$(MSBuildThisFileDirectory)packages</PackagesDir>
    <ClojurePackageDir Condition=" '$(ClojurePackageDir)'==''">$(PackagesDir)\Clojure.1.6.0.1\</ClojurePackageDir>
    <ExtensionTasksPath Condition=" '$(ExtensionTasksPath)'=='' ">$(PackagesDir)\MSBuild.Extension.Pack.1.5.0\tools\net40</ExtensionTasksPath>
    <TargetsDir Condition=" '$(TargetsDir)'=='' ">$(MSBuildThisFileDirectory)targets</TargetsDir>
    <TestProjectName Condition=" '$(TestProjectName)'=='' ">tstproj</TestProjectName>
    <ChocoExe>$(MSBuildThisFileDirectory)\packages\chocolatey.0.9.9-rc8\tools\chocolateyInstall\choco.exe</ChocoExe>
  </PropertyGroup>

  <ItemGroup>
    <ClojureTools Include="$(ClojurePackageDir)tools\net40\*" />
    <ClojureLibs Include="$(ClojurePackageDir)lib\net40\*" />
  </ItemGroup>

  <ItemGroup>
    <Libs Include="$(PackagesDir)\Nuget.Core.2.8.3\lib\net40-Client\NuGet.Core.dll" />
  </ItemGroup>

  <Target Name="RestorePackages">
    <Exec Command="&quot;$(ToolsDir)NuGet.exe&quot; restore -PackagesDirectory &quot;$(PackagesDir)&quot;" />

    <!-- copy clojure compiler tools into tools directory - you can't run them directly from packages... -->
    <Copy SourceFiles="@(ClojureTools)" DestinationFolder="$(ToolsDir)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(ClojureLibs)" DestinationFolder="$(ToolsDir)" SkipUnchangedFiles="true" />
  </Target>

  <Target Name="Build" DependsOnTargets="RestorePackages;CampExe" />

  <ItemGroup>
    <!-- Clojure.Compile wants the source namespace names, not files -->
    <ClojureSources Include="camp.core" />
    <ClojureSources Include="camp.main" />
    <ClojureSources Include="camp.tasks.compile" />
    <ClojureSources Include="camp.project" />
    <ClojureSources Include="camp.tasks.deps" />
    <ClojureSources Include="camp.tasks.help" />
    <ClojureSources Include="camp.tasks.new" />
    <ClojureSources Include="camp.tasks.pprint" />
  </ItemGroup>

  <ItemGroup>
    <ClojureCompilerOutput Include="$(SourceDir)\**\*.dll;$(SourceDir)\**\*.exe" />
    <TargetBinaries Include="$(TargetsDir)\**" />
  </ItemGroup>

  <Target Name="InitTargetsDir">
    <Copy SourceFiles="@(ClojureLibs)"
	  DestinationFolder="$(TargetsDir)"
	  SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(Libs)"
	  DestinationFolder="$(TargetsDir)"
	  SkipUnchangedFiles="true" />
  </Target>

  <Target Name="CampExe" DependsOnTargets="InitTargetsDir;Compile">
    <Copy SourceFiles="@(ClojureCompilerOutput)" DestinationFolder="$(TargetsDir)" />
  </Target>

  <Target Name="Compile">
    <SetEnvironmentVariable Name="CLOJURE_COMPILE_PATH" Value="$(TargetsDir)" />
    <Exec Command="$(ClojureCompiler) @(ClojureSources, ' ')"
          WorkingDirectory="$(SourceDir)" />
    <Move SourceFiles="$(TargetsDir)\camp.main.exe"
          DestinationFiles="$(TargetsDir)\camp.exe" />
  </Target>

  <Target Name="TestNew" DependsOnTargets="CampExe">
    <Delete Files="$(TestProjectName)" />
    <Exec Command="targets\camp.exe new $(TestProjectName)"
          WorkingDirectory="$(MSBuildThisFileDirectory)" />
  </Target>

  <Target Name="TestDeps" DependsOnTargets="CampExe">
    <Exec Command="..\targets\camp.exe deps"
          WorkingDirectory="$(MSBuildThisFileDirectory)\$(TestProjectName)" />
  </Target>

  <Target Name="TestCompile" DependsOnTargets="CampExe">
    <Exec Command="..\targets\camp.exe compile"
          WorkingDirectory="$(MSBuildThisFileDirectory)\$(TestProjectName)" />
  </Target>

  <Target Name="TestRunTarget" DependsOnTargets="CampExe">
    <Message Text="Target output:" Importance="high" />
    <Message Text="----------------------------------------" Importance="high" />
    <Exec Command="$(TestProjectName).core.exe"
          WorkingDirectory="$(TestProjectName)\targets" />
    <Message Text="----------------------------------------" Importance="high" />
  </Target>

  <Target Name="Package" DependsOnTargets="ChocolateyPackage" />

  <Target Name="ChocolateyPackage" DependsOnTargets="CampExe">
    <Exec Command="$(ChocoExe) pack chocolatey\camp.nuspec" />
  </Target>

  <Target Name="ChocoInstall" DependsOnTargets="ChocolateyPackage">
    <Exec Command="$(ChocoExe) install --debug --force --pre --source chocolatey camp.portable" />
  </Target>

  <Target Name="Clean">
    <Delete Files="@(TargetBinaries)" />
    <Delete Files="@(ClojureCompilerOutput)" />
    <Delete Files="chocolatey\camp*.nupkg" />
  </Target>

</Project>
